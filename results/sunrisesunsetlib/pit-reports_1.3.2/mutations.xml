<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>adjustForDST</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/math/BigDecimal;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>31</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>adjustForDST</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/math/BigDecimal;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>30</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>adjustForDST</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/math/BigDecimal;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>31</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testSpecificDateLocationAndTimezone(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>adjustForDST</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/math/BigDecimal;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>32</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::adjustForDST to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>computeSolarEventTime</mutatedMethod><methodDescription>(Lcom/luckycatlabs/sunrisesunset/Zenith;Ljava/util/Calendar;Z)Ljava/math/BigDecimal;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>6</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetDataTest.com.luckycatlabs.sunrisesunset.SunriseSunsetDataTest</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>computeSolarEventTime</mutatedMethod><methodDescription>(Lcom/luckycatlabs/sunrisesunset/Zenith;Ljava/util/Calendar;Z)Ljava/math/BigDecimal;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><block>7</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>computeSolarEventTime</mutatedMethod><methodDescription>(Lcom/luckycatlabs/sunrisesunset/Zenith;Ljava/util/Calendar;Z)Ljava/math/BigDecimal;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>6</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>computeSolarEventTime</mutatedMethod><methodDescription>(Lcom/luckycatlabs/sunrisesunset/Zenith;Ljava/util/Calendar;Z)Ljava/math/BigDecimal;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>7</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>computeSolarEventTime</mutatedMethod><methodDescription>(Lcom/luckycatlabs/sunrisesunset/Zenith;Ljava/util/Calendar;Z)Ljava/math/BigDecimal;</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>8</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetDataTest.com.luckycatlabs.sunrisesunset.SunriseSunsetDataTest</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::computeSolarEventTime to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>computeSolarEventTime</mutatedMethod><methodDescription>(Lcom/luckycatlabs/sunrisesunset/Zenith;Ljava/util/Calendar;Z)Ljava/math/BigDecimal;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>78</index><block>9</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::computeSolarEventTime to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>computeSolarEventTime</mutatedMethod><methodDescription>(Lcom/luckycatlabs/sunrisesunset/Zenith;Ljava/util/Calendar;Z)Ljava/math/BigDecimal;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>6</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testNonIntegerTimezoneOffset(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>removed call to java/util/Calendar::setTimeZone</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>computeSunriseCalendar</mutatedMethod><methodDescription>(Lcom/luckycatlabs/sunrisesunset/Zenith;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>3</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testSpecificDateLocationAndTimezone(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::computeSunriseCalendar to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>computeSunriseTime</mutatedMethod><methodDescription>(Lcom/luckycatlabs/sunrisesunset/Zenith;Ljava/util/Calendar;)Ljava/lang/String;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::computeSunriseTime to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>computeSunsetCalendar</mutatedMethod><methodDescription>(Lcom/luckycatlabs/sunrisesunset/Zenith;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>5</block><killingTest/><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::computeSunsetCalendar to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>computeSunsetTime</mutatedMethod><methodDescription>(Lcom/luckycatlabs/sunrisesunset/Zenith;Ljava/util/Calendar;)Ljava/lang/String;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>4</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunsetTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::computeSunsetTime to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>convertDegreesToRadians</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>53</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::convertDegreesToRadians to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>convertRadiansToDegrees</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>52</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::convertRadiansToDegrees to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>divideBy</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>55</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::divideBy to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getArcCosineFor</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>51</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getArcCosineFor to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getBaseLongitudeHour</mutatedMethod><methodDescription>()Ljava/math/BigDecimal;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>10</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getBaseLongitudeHour to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getCosineOfSunDeclination</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>22</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getCosineOfSunDeclination to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getCosineSunLocalHour</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Lcom/luckycatlabs/sunrisesunset/Zenith;)Ljava/math/BigDecimal;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>75</index><block>20</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getCosineSunLocalHour to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/math/BigDecimal;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>49</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getDayOfYear to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalMeanTime</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>25</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalMeanTime</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>27</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalMeanTime</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>25</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testNonIntegerTimezoneOffset(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalMeanTime</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>27</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testSpecificDateLocationAndTimezone(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalMeanTime</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>69</index><block>28</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getLocalMeanTime to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTime</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/math/BigDecimal;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>29</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getLocalTime to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsCalendar</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>93</index><block>47</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsCalendar</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>43</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testGetLocalTimeAsCalendar(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsCalendar</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>45</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testSpecificDateLocationAndTimezone(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsCalendar</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>46</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testGetLocalTimeAsCalendar(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsCalendar</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>47</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testGetLocalTimeAsCalendar(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsCalendar</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>44</block><killingTest/><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getLocalTimeAsCalendar to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsCalendar</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>139</index><block>48</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testGetLocalTimeAsCalendar(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getLocalTimeAsCalendar to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsCalendar</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>46</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testSpecificDateLocationAndTimezone(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>removed call to java/util/Calendar::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsCalendar</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>110</index><block>48</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testGetLocalTimeAsCalendar(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>removed call to java/util/Calendar::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsCalendar</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>117</index><block>48</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testGetLocalTimeAsCalendar(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>removed call to java/util/Calendar::set</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsCalendar</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>123</index><block>48</block><killingTest/><description>removed call to java/util/Calendar::set</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsCalendar</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>129</index><block>48</block><killingTest/><description>removed call to java/util/Calendar::set</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsCalendar</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>135</index><block>48</block><killingTest/><description>removed call to java/util/Calendar::setTimeZone</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsString</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/lang/String;</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>98</index><block>38</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsString</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/lang/String;</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>120</index><block>40</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsString</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/lang/String;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>81</index><block>37</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testComputeOfficialSunset(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsString</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/lang/String;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>33</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsString</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/lang/String;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>35</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsString</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/lang/String;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>36</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsString</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/lang/String;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>37</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsString</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/lang/String;</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>38</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsString</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/lang/String;</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>40</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsString</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/lang/String;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>34</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetDataTest.com.luckycatlabs.sunrisesunset.SunriseSunsetDataTest</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getLocalTimeAsString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLocalTimeAsString</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/lang/String;</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>150</index><block>42</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getLocalTimeAsString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLongitudeHour</mutatedMethod><methodDescription>(Ljava/util/Calendar;Ljava/lang/Boolean;)Ljava/math/BigDecimal;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>11</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunsetTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getLongitudeHour</mutatedMethod><methodDescription>(Ljava/util/Calendar;Ljava/lang/Boolean;)Ljava/math/BigDecimal;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>12</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getLongitudeHour to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getMeanAnomaly</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>13</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getMeanAnomaly to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getRightAscension</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>16</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getRightAscension</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>65</index><block>18</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getRightAscension</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>16</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getRightAscension</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>18</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getRightAscension</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>122</index><block>19</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getRightAscension to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getSinOfSunDeclination</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>21</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getSinOfSunDeclination to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getSunLocalHour</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/lang/Boolean;)Ljava/math/BigDecimal;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>23</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getSunLocalHour</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/lang/Boolean;)Ljava/math/BigDecimal;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>24</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getSunLocalHour to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getSunTrueLongitude</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>70</index><block>14</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getSunTrueLongitude</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>14</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getSunTrueLongitude</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>84</index><block>15</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getSunTrueLongitude to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>getUTCOffSet</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/math/BigDecimal;</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>50</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::getUTCOffSet to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>multiplyBy</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>54</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::multiplyBy to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SolarEventCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator</mutatedClass><mutatedMethod>setScale</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>56</block><killingTest>com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest.testComputeSunriseTime(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator::setScale to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getAstronomicalSunriseCalendarForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>3</block><killingTest/><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getAstronomicalSunriseCalendarForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getAstronomicalSunriseForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/lang/String;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testComputeAstronomicalSunrise(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getAstronomicalSunriseForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getAstronomicalSunsetCalendarForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>5</block><killingTest/><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getAstronomicalSunsetCalendarForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getAstronomicalSunsetForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/lang/String;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>4</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testComputeAstronomicalSunset(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getAstronomicalSunsetForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getCivilSunriseCalendarForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>11</block><killingTest/><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getCivilSunriseCalendarForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getCivilSunriseForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/lang/String;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>10</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testComputeCivilSunrise(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getCivilSunriseForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getCivilSunsetCalendarForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>13</block><killingTest/><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getCivilSunsetCalendarForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getCivilSunsetForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/lang/String;</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>12</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testComputeCivilSunset(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getCivilSunsetForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getLocation</mutatedMethod><methodDescription>()Lcom/luckycatlabs/sunrisesunset/dto/Location;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>20</block><killingTest/><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getLocation to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getNauticalSunriseCalendarForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>7</block><killingTest/><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getNauticalSunriseCalendarForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getNauticalSunriseForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/lang/String;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>6</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testComputeNauticalSunrise(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getNauticalSunriseForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getNauticalSunsetCalendarForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>9</block><killingTest/><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getNauticalSunsetCalendarForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getNauticalSunsetForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/lang/String;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>8</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testComputeNauticalSunset(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getNauticalSunsetForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getOfficialSunriseCalendarForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>15</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testSpecificDateLocationAndTimezone(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getOfficialSunriseCalendarForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getOfficialSunriseForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/lang/String;</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>14</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testNonIntegerTimezoneOffset(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getOfficialSunriseForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getOfficialSunsetCalendarForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/util/Calendar;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>17</block><killingTest/><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getOfficialSunsetCalendarForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getOfficialSunsetForDate</mutatedMethod><methodDescription>(Ljava/util/Calendar;)Ljava/lang/String;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>16</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testComputeOfficialSunset(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getOfficialSunsetForDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getSunrise</mutatedMethod><methodDescription>(DDLjava/util/TimeZone;Ljava/util/Calendar;D)Ljava/util/Calendar;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>18</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getSunrise</mutatedMethod><methodDescription>(DDLjava/util/TimeZone;Ljava/util/Calendar;D)Ljava/util/Calendar;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>18</block><killingTest/><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getSunrise to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getSunset</mutatedMethod><methodDescription>(DDLjava/util/TimeZone;Ljava/util/Calendar;D)Ljava/util/Calendar;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>19</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SunriseSunsetCalculator.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator</mutatedClass><mutatedMethod>getSunset</mutatedMethod><methodDescription>(DDLjava/util/TimeZone;Ljava/util/Calendar;D)Ljava/util/Calendar;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>19</block><killingTest/><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator::getSunset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Location.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.dto.Location</mutatedClass><mutatedMethod>getLatitude</mutatedMethod><methodDescription>()Ljava/math/BigDecimal;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testNonIntegerTimezoneOffset(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/dto/Location::getLatitude to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Location.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.dto.Location</mutatedClass><mutatedMethod>getLongitude</mutatedMethod><methodDescription>()Ljava/math/BigDecimal;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testNonIntegerTimezoneOffset(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/dto/Location::getLongitude to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Zenith.java</sourceFile><mutatedClass>com.luckycatlabs.sunrisesunset.Zenith</mutatedClass><mutatedMethod>degrees</mutatedMethod><methodDescription>()Ljava/math/BigDecimal;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest.testNonIntegerTimezoneOffset(com.luckycatlabs.sunrisesunset.SunriseSunsetCalculatorTest)</killingTest><description>mutated return of Object value for com/luckycatlabs/sunrisesunset/Zenith::degrees to ( if (x != null) null else throw new RuntimeException )</description></mutation>
</mutations>
